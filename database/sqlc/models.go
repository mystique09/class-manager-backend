// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0

package database

import (
	"database/sql"
	"fmt"

	"github.com/google/uuid"
)

type Role string

const (
	RoleSTUDENT Role = "STUDENT"
	RoleTEACHER Role = "TEACHER"
)

func (e *Role) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Role(s)
	case string:
		*e = Role(s)
	default:
		return fmt.Errorf("unsupported scan type for Role: %T", src)
	}
	return nil
}

type Class struct {
	ID          uuid.UUID      `json:"id"`
	AdminID     uuid.NullUUID  `json:"admin_id"`
	Name        string         `json:"name"`
	Description sql.NullString `json:"description"`
	Section     sql.NullString `json:"section"`
	Room        sql.NullString `json:"room"`
	Subject     sql.NullString `json:"subject"`
	InviteCode  uuid.NullUUID  `json:"invite_code"`
	CreatedAt   sql.NullTime   `json:"created_at"`
	UpdatedAt   sql.NullTime   `json:"updated_at"`
}

type ClassWork struct {
	ID        uuid.UUID     `json:"id"`
	Name      string        `json:"name"`
	UserID    uuid.NullUUID `json:"user_id"`
	ClassID   uuid.NullUUID `json:"class_id"`
	Mark      sql.NullInt32 `json:"mark"`
	CreatedAt sql.NullTime  `json:"created_at"`
	UpdatedAt sql.NullTime  `json:"updated_at"`
}

type Comment struct {
	ID        uuid.UUID     `json:"id"`
	Content   string        `json:"content"`
	AuthorID  uuid.NullUUID `json:"author_id"`
	PostID    uuid.NullUUID `json:"post_id"`
	CreatedAt sql.NullTime  `json:"created_at"`
	UpdatedAt sql.NullTime  `json:"updated_at"`
}

type Post struct {
	ID        uuid.UUID     `json:"id"`
	Content   string        `json:"content"`
	AuthorID  uuid.NullUUID `json:"author_id"`
	ClassID   uuid.NullUUID `json:"class_id"`
	CreatedAt sql.NullTime  `json:"created_at"`
	UpdatedAt sql.NullTime  `json:"updated_at"`
}

type User struct {
	ID        uuid.UUID    `json:"id"`
	Username  string       `json:"username"`
	Password  string       `json:"-"`
	Email     string       `json:"email"`
	UserRole  Role         `json:"user_role"`
	CreatedAt sql.NullTime `json:"created_at"`
	UpdatedAt sql.NullTime `json:"updated_at"`
}
